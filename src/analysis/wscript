#! python


def build(ctx):

    def out_data(*args):
        return ctx.path_to(ctx, 'OUT_DATA', *args)

    def out_models(*args):
        return ctx.path_to(ctx, 'OUT_MODEL_SPECS', *args)

    for model in 'baseline', 'max_moves_2':

        # Illustrate use of run_py_script with automatic model specification.
        ctx(
            features='run_py_script',
            source='schelling.py',
            deps=[
                ctx.path_to(ctx, 'OUT_DATA', 'initial_locations.csv'),
                ctx.path_to(ctx, 'IN_MODEL_CODE', 'agent.py'),
                ctx.path_to(ctx, 'IN_MODEL_SPECS', '{}.json'.format(model)),
            ],
            target=[
                ctx.path_to(ctx, 'OUT_ANALYSIS', 'schelling_{}.pickle'.format(model)),
                ctx.path_to(ctx, 'OUT_ANALYSIS', 'log', 'schelling_{}.log'.format(model))
            ],
            append=model,
            name='schelling_{}'.format(model)
        )

    for model in 'reg1_panel', 'reg2_compare', 'reg3_robustness':

        ctx(
            features='run_do_script',
            source='{}.do'.format(model),
            deps=[
                out_data('data_all.dta'),
                out_models('{}.do'.format(model))
            ],
            target=[
                ctx.path_to(ctx, 'OUT_ANALYSIS', 'log', '{}.log'.format(model)),
                ctx.path_to(ctx, 'OUT_ANALYSIS', '{}.tex'.format(model))
            ],
        )
